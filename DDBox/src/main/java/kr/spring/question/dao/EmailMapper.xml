<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.spring.question.dao.EmailMapper">
	<!-- 문의 글등록 -->
	<insert id="insertEmail" parameterType="emailVO">
		INSERT INTO email_faq(
			qna_num,
			mem_num,
			qna_title,
			qna_type,
			scr_num,
			question_content,
			question_file,
			ask_content,
			ask_regdate)
		VALUES (
			email_faq_seq.nextval,
			#{mem_num},
			#{qna_title},
			#{qna_type},
			#{scr_num,jdbcType=INTEGER},
			#{question_content},
			#{question_file,jdbcType=VARCHAR},
			#{ask_content,jdbcType=VARCHAR},
			#{ask_regdate,jdbcType=VARCHAR})
	</insert>
	
	<!-- 검색 기능 -->
	<sql id="emailSearch">
		<where>
			<if test="keyword != null and keyword != ''">
				AND qna_title LIKE '%' || #{keyword} || '%' OR
				question_content LIKE '%' || #{keyword} || '%' 
			</if>
		</where>
	</sql>
	
	<!-- 검색 기능 -->
	<sql id="emailSearchForAdmin">
		<where>
			<if test="keyword != null and keyword != ''">
				qna_title LIKE '%' || #{keyword} || '%' OR
				question_content LIKE '%' || #{keyword} || '%' 
			</if>
		</where>
	</sql>
	
	
	
	<!-- 총 개수/ 검색 개수 -->
	<select id="selectRowCount" parameterType="map" resultType="integer">
		SELECT
			COUNT(*)
		FROM email_faq JOIN member USING (mem_num) WHERE mem_num=#{mem_num}
		<include refid="emailSearch"></include>
	</select>
	
	
	<!-- 전체 목록/검색 목록 -->
	<select id="selectList" parameterType="map" resultType="emailVO">
		SELECT
		  *
		FROM (SELECT
				a.*,
				rownum rnum
			  FROM (SELECT
					  qna_num,
					  qna_type,
					  <![CDATA[
					  REPLACE(REPLACE(qna_title,'<','&lt;'),'>','&gt;') qna_title,
					  ]]>
					  ask_content
				    FROM email_faq
				    JOIN member USING(mem_num)
				    WHERE mem_num=#{mem_num}
					<include refid="emailSearch"></include>
					ORDER BY question_regdate DESC)a)
		<![CDATA[
		WHERE rnum >= #{start} AND rnum <= #{end}
		]]>
	</select>
	
<!-- 		
SELECT * FROM (SELECT a.*, rownum rnum FROM
(SELECT * FROM email_faq e LEFT OUTER JOIN
member_detail m ON e.mem_num=m.mem_num
ORDER BY question_regdate  DESC)a) 
WHERE rnum>=1 AND rnum<=100 -->
	
	<!-- 글 상세 (기존)
	<select id="selectEmail" parameterType="integer">
		SELECT
			*
		FROM email_faq
		JOIN member USING(mem_num) 
		LEFT OUTER JOIN member_detail USING(mem_num) 
		WHERE qna_num=#{qna_num}
	</select> -->
	
	<!-- 글 상세 // scr_name 포함 -->
	<select id="selectEmail" parameterType="integer">
		SELECT
			e.*,
			m.mem_id,
			s.scr_name
		FROM email_faq e
		JOIN member m ON e.mem_num = m.mem_num
		LEFT JOIN screen s ON e.scr_num = s.scr_num
		WHERE qna_num=#{qna_num}
	</select>
	
	
	
	
	<!-- 글 수정 (답글 달기) -->
	<update id="updateEmail" parameterType="emailVO">
		UPDATE email_faq SET
			ask_content=#{ask_content},
			ask_regdate=SYSDATE
		WHERE qna_num=#{qna_num}
	</update>
	
	<!-- 관리자 -->
	<!-- 총 개수/ 검색 개수 -->
	<select id="selectRowCountForAdmin" parameterType="map" resultType="integer">
		SELECT
			COUNT(*)
		FROM email_faq JOIN member USING (mem_num)
		<include refid="emailSearchForAdmin"></include>
	</select>
	
	
	<!-- 전체 목록/검색 목록 -->
	<select id="selectListForAdmin" parameterType="map" resultType="emailVO">
		SELECT
		  *
		FROM (SELECT
				a.*,
				rownum rnum
			  FROM (SELECT
					  *
				    FROM email_faq e
       		        JOIN member m ON e.mem_num = m.mem_num
					<include refid="emailSearchForAdmin"></include>
					ORDER BY question_regdate DESC)a)
		<![CDATA[
		WHERE rnum >= #{start} AND rnum <= #{end}
		]]>
	</select>

	
	
	
	
	
	
	
</mapper>